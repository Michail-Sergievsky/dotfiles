# vim: set filetype=sh :
# 'man task-sync' or 'man taskrc'
# news.version=4.0.2

include ~/.env_priv/task_config

# Color theme (choose one)
include solarized-light-256.theme

# Disable confirmations (if you prefer)
confirmation=off

#allow purge
allow.purge=yes

#only one recurring
rc.recurring.generate=0

# User Defined Attributes (UDAs)
uda.type.type = string
uda.type.label = Type
uda.type.values = in,next,note,objective,someday,waiting,cal,bucketlist

uda.cat.type = string
uda.cat.label = Category
# uda.cat.values = home,office,life,school,trip

uda.priority.type = string
uda.priority.values = H,L,
urgency.uda.priority.H.coefficient = 0
urgency.uda.priority.L.coefficient = 0

uda.difficulty.type = string
uda.difficulty.label = Difficulty
uda.difficulty.values = H,L,

# Global urgency coefficients – set all to 0 so that urgency has no effect.
urgency.age.coefficient = 0
urgency.priority.coefficient = 0
urgency.due.coefficient = 0
urgency.wait.coefficient = 0
urgency.scheduled.coefficient = 0
urgency.overdue.coefficient = 0

# CONTEXT


# REPORTS

# Default GTD view
default.command = gtd

# GTD overview: all actionable items
report.gtd.description = GTD View
report.gtd.filter = status:pending and (type:next or type:waiting or type:cal or type:objective)
report.gtd.columns = uuid,start.age,cat,priority,difficulty,tags,project,type,description.count
report.gtd.labels = uuid,Active,CAT,P,Diff,Tags,Project,Type,Description
report.gtd.sort = type-,cat+,project+,entry+

# GTD overview: all actionable items+complete task
report.gtdc.description = GTD View
report.gtdc.filter = status:pending and (type:next or type:waiting or type:cal or type:objective)
report.gtdc.columns = uuid,start.age,end.age,cat,priority,difficulty,tags,project,type,description.count
report.gtdc.labels = uuid,Active,Done,CAT,P,Diff,Tags,Project,Type,Description
report.gtdc.sort = cat+,project+,type-,entry+

# Inbox
report.in.description = Inbox
report.in.filter = status:pending and type:in
report.in.columns = uuid,id,description,priority,difficulty
report.in.labels = uuid,ID,Description,Priority,Difficulty
report.in.sort = entry+

# Next actions
report.next.description = Next Actions
report.next.filter = status:pending and type:next
report.next.columns = uuid,id,start.age,cat,priority,difficulty,tags,project,type,recur,scheduled.countdown,due.relative,until.remaining,description.count
report.next.labels  = uuid,ID,Active,CAT,P,Difficulty,Tags,Project,Type,Recur,S,Due,Until,Description
report.next.sort = cat+,project+,entry+

# Next actions with complete task
report.nextc.description = Next Actions
report.nextc.filter = (status:pending or status:completed) and type:next
report.nextc.columns = uuid,id,start.age,end.age,cat,priority,difficulty,tags,project,type,recur,scheduled.countdown,due.relative,until.remaining,description.count
report.nextc.labels  = uuid,ID,Active,Done,CAT,P,Difficulty,Tags,Project,Type,Recur,S,Due,Until,Description
report.nextc.sort = cat+,project+,entry+

# All projects with tasks (including next, cal, waiting)

report.projs.description = Projects + Actions
report.projs.filter = status:pending and (type:objective or type:next or type:cal or type:waiting)
report.projs.columns = uuid,id,cat,project,type,description
report.projs.labels = uuid,ID,CAT,Project,Type,Description
report.projs.sort = cat+,project+,type-,entry+

# Projects with no next actions NOT WORK
report.projs_without_next.description = Projects without Next Actions
report.projs_without_next.filter = type:objective and status:pending and not project.any:(type:next)
report.projs_without_next.columns = uuid,id,start.age,cat,priority,difficulty,tags,project,type,recur,scheduled.countdown,due.relative,until.remaining,description.count
report.projs_without_next.labels  = uuid,ID,Active,CAT,P,Difficulty,Tags,Project,Type,Recur,S,Due,Until,Description
report.projs_without_next.sort = cat+,project+

# One project (you choose project manually with a filter) ADD LATER
report.proj.description = One Project
report.proj.filter = status:pending and (type:objective or type:next or type:cal or type:waiting)
report.proj.columns = uuid,status,cat,project,type,difficulty,tags,description,entry,due
report.proj.labels = uuid,Status,CAT,Project,Type,Difficulty,Tags,Description,Entry,Due
report.proj.sort = entry+
# Note: appfilter manually when running

# Someday/Maybe
report.someday.description = Someday/Maybe
report.someday.filter = status:pending and type:someday
report.someday.columns = uuid,id,start.age,cat,priority,difficulty,project,type,recur,scheduled.countdown,due.relative,until.remaining,description.count
report.someday.labels  = uuid,ID,Active,CAT,P,Difficulty,Project,Type,Recur,S,Due,Until,Description
report.someday.sort = cat+,project+,entry+

# Waiting tasks
report.waiting.description = Waiting
report.waiting.filter = status:pending and type:waiting
# report.waiting.filter = limit: type:waiting status:pending +READY
report.waiting.columns = uuid,id,cat,priority,difficulty,tags,project,scheduled,due,due.relative,description.count
report.waiting.labels = uuid,ID,CAT,P,Diff,Tags,Project,SHE,DUE,Days left,Description
report.waiting.sort = cat+,project+,priority

# Calendar tasks
report.cal.description = Calendar
report.cal.filter = status:pending and type:cal
report.cal.columns = uuid,id,cat,project,recur.indicator,scheduled,due,description,difficulty
report.cal.labels = uuid,ID,CAT,Project,R,Scheduled,Due,Description,Difficulty
report.cal.sort = cat+,scheduled

# Birthdays (tagged cal)
report.birthdays.description = Birthdays
report.birthdays.filter = status:pending and type:cal and +birthday
report.birthdays.columns = uuid,id,project,scheduled,due,description
report.birthdays.labels = uuid,ID,Project,Scheduled,Due,Description
report.birthdays.sort = scheduled

# Bucketlist
report.bucketlist.description = Bucket List
report.bucketlist.filter = status:pending and type:bucketlist
report.bucketlist.columns = uuid,id,description,cat,project,difficulty
report.bucketlist.labels = uuid,ID,Description,CAT,Project,Difficulty
report.bucketlist.sort = cat+,project+

# Done tasks
report.completed.description = Completed Tasks
report.completed.filter = status:completed
report.completed.columns = uuid,id,end.age,cat,project,type,description
report.completed.labels = uuid,ID,Done,CAT,Project,Type,Description
report.completed.sort = cat+,project+,end-

# Deleted tasks
report.deleted.description = Deleted Tasks
report.deleted.filter = status:deleted
report.deleted.columns = uuid,id,end.age,cat,project,type,description
report.deleted.labels = uuid,ID,Deleted,CAT,Project,Type,Description
report.deleted.sort = cat+,project+,end-

# All tasks
report.all.description = All Tasks
report.all.filter = 
report.all.columns = uuid,id,status.short,start.active,entry.age,end.age,type,depends.indicator,priority,difficulty,cat,project,tags.count,recur.indicator,wait.remaining,scheduled.remaining,due,until.remaining,description
report.all.labels  = uuid,ID,St,A,Age,Done,Type,D,P,Diff,CAT,Project,TagsC,R,Wait,Sch,Due,Until,Description
report.all.sort = cat+,project+,entry+


#MISC, sort
uda.reviewed.type=date
uda.reviewed.label=Reviewed
report._reviewed.description=Tasksh review report.  Adjust the filter to your needs.
report._reviewed.columns=uuid
report._reviewed.sort=reviewed+,modified+
report._reviewed.filter=( reviewed.none: or reviewed.before:now-6days ) and ( +PENDING or +WAITING )

# A custom report to show all tasks for a given project.
report.project.columns = id,status,project,description,entry,due
report.project.labels  = ID,Status,Project,Description,Entry,Due
report.project.sort    = entry+
# Note: This report has no built‐in filter. When you run it, you’ll have to supply a project filter.

# Custom report to show annotations only
report.annotations.columns=id,description,annotations
report.annotations.labels=ID,Description,Annotation
report.annotations.filter=status:pending
report.annotations.sort=due-

news.version=3.4.1
context.work.read=+work or +freelance
context.study.read=+school
context.study.write=+school
